kind: Namespace
apiVersion: v1
metadata:
  name: appointment-scheduler
  labels:
    name: appointment-scheduler
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: appointment-scheduler
spec:
  selector:
    matchLabels:
      app: appointment-scheduler
  replicas: 1
  template:
    metadata:
      labels:
        app: appointment-scheduler
    spec:
      containers:
        - image: 191518685251.dkr.ecr.us-west-1.amazonaws.com/appointment-scheduler:latest
          imagePullPolicy: Always
          name: appointment-scheduler
          ports:
            - containerPort: 5174
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: appointment-scheduler-service
spec:
  ports:
    - port: 80
      targetPort: 5174
      protocol: TCP
  type: NodePort
  selector:
    app: appointment-scheduler
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: default
  name: appointment-scheduler-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-1:191518685251:certificate/01063fb2-3b12-48f9-b312-657a50b7eadd
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: ssl-redirect
              servicePort: use-annotation
          - path: /*
            backend:
              serviceName: appointment-scheduler-service
              servicePort: 80
